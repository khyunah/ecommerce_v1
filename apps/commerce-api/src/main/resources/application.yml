server:
  shutdown: graceful
  tomcat:
    threads:
      max: 200 # 최대 워커 스레드 수 (default : 200)
      min-spare: 10 # 최소 유지 스레드 수 (default : 10)
    connection-timeout: 1m # 연결 타임아웃 (ms) (default : 60000ms = 1m)
    max-connections: 8192 # 최대 동시 연결 수 (default : 8192)
    accept-count: 100 # 대기 큐 크기 (default : 100)
    keep-alive-timeout: 60s # 60s
  max-http-request-header-size: 8KB

spring:
  main:
    web-application-type: servlet
  application:
    name: commerce-api
  profiles:
    active: local
  config:
    import:
      - jpa.yml
      - redis.yml
      - logging.yml
      - monitoring.yml

# PG 연동 설정
pg:
  payment:
    url: http://localhost:8081
  callback:
    url: http://localhost:8080/api/v1/payments/callback

# Feign 클라이언트 설정
feign:
  client:
    config:
      pg-client:
        connect-timeout: 3000      # 연결 타임아웃 3초
        read-timeout: 10000        # 읽기 타임아웃 10초
        logger-level: basic
  compression:
    request:
      enabled: true
    response:
      enabled: true

# Resilience4j 설정
resilience4j:
  timelimiter:
    instances:
      pg-client:
        timeout-duration: 12s      # 전체 타임아웃 12초
        cancel-running-future: true
  retry:
    instances:
      pg-payment-request:
        max-attempts: 3            # 최대 3번 재시도
        wait-duration: 2s          # 재시도 간격 2초
        exponential-backoff-multiplier: 2  # 지수 백오프
        retry-exceptions:
          - java.net.SocketTimeoutException
          - java.net.ConnectException
          - feign.RetryableException
          - com.loopers.infrastructure.payment.PgFeignErrorDecoder$PgServiceUnavailableException
      pg-payment-status-check:
        max-attempts: 3            # 상태 확인 3번 재시도
        wait-duration: 3s          # 3초 간격으로 재시도
        exponential-backoff-multiplier: 1  # 고정 간격 (3초, 3초, 3초)
        retry-exceptions:
          - java.net.SocketTimeoutException
          - java.net.ConnectException
          - feign.RetryableException
          - com.loopers.infrastructure.payment.PgFeignErrorDecoder$PgServiceUnavailableException
  circuitbreaker:
    instances:
      pg-client:
        failure-rate-threshold: 50        # 실패율 50% 초과시 OPEN
        slow-call-rate-threshold: 70      # 느린 호출 70% 초과시 OPEN
        slow-call-duration-threshold: 8s  # 8초 이상을 느린 호출로 간주
        minimum-number-of-calls: 10       # 최소 10번 호출 후 통계 계산
        sliding-window-size: 20           # 슬라이딩 윈도우 크기
        wait-duration-in-open-state: 30s  # OPEN 상태 30초 유지
        permitted-number-of-calls-in-half-open-state: 5  # HALF-OPEN에서 5번 테스트
        automatic-transition-from-open-to-half-open-enabled: true

springdoc:
  use-fqn: true
  swagger-ui:
    path: /swagger-ui.html

---
spring:
  config:
    activate:
      on-profile: local, test

---
spring:
  config:
    activate:
      on-profile: dev

---
spring:
  config:
    activate:
      on-profile: qa

---
spring:
  config:
    activate:
      on-profile: prd

springdoc:
  api-docs:
    enabled: false

logging:
  level:
    root: info

---
spring:
  jpa:
    hibernate:
      ddl-auto: update
    defer-datasource-initialization: true